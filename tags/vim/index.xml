<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vim on My Devlog</title>
    
    
    
    <link>https://ralpioxxcs.github.io/tags/vim/</link>
    <description>Recent content in vim on My Devlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Dec 2020 20:13:41 +0900</lastBuildDate>
    
	<atom:link href="https://ralpioxxcs.github.io/tags/vim/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vim 사용하기 #3 - C/C&#43;&#43; 개발환경 세팅</title>
      <link>https://ralpioxxcs.github.io/post/vim/vim_setting_3/</link>
      <pubDate>Fri, 11 Dec 2020 20:13:41 +0900</pubDate>
      
      <guid>https://ralpioxxcs.github.io/post/vim/vim_setting_3/</guid>
      <description>
        
          
          
          
        
        
        
          이번에는 neovim에서 coc.nvim를 이용하여 C/C++ 개발환경을 세팅하는 방법에 대해서 알아보겠다.
coc.nvim은 Language Server Protocol인 LSP를 지원하는 코드 auto-completion 패키지인데 이전에는 ycm을 사용하다가 너무 무겁기도 하고 개인적으로 환경설정 부분에 불편함 점이 있어 coc.nvim을 사용하게 되었다.
coc.nvim 설치 vim-plug 설정부분에 아래를 추가해준뒤, :PlugInstall을 해준다.
Plug &amp;#39;neoclide/coc.nvim&amp;#39;, {&amp;#39;tag&amp;#39;: &amp;#39;*&amp;#39;, &amp;#39;do&amp;#39;: &amp;#39;./install.sh&amp;#39;} 참고로, node.js 10.12 버전 이상이 설치되어있어야 한다. node.js가 설치되어있지 않다면 여기를 참고하여 다운로드 및 설치를 진행해주자.
 cpp language server 설치 이곳을 보면 C/C++ language server에 맞는 configuration example을 제공한다.
          
        
        </description>
    </item>
    
    <item>
      <title>Vim 사용하기 #2 - Plugin</title>
      <link>https://ralpioxxcs.github.io/post/vim/vim_setting_2/</link>
      <pubDate>Fri, 07 Aug 2020 14:26:52 +0900</pubDate>
      
      <guid>https://ralpioxxcs.github.io/post/vim/vim_setting_2/</guid>
      <description>
        
          
          
          
        
        
        
          Plugins vim을 쓰는 가장 큰 이유중 하나는 바로 이 Plugin에 있지않나 싶다. 설치도 비교적 간편하며, 확장성이 뛰어나서 플러그인을 사용하면서 불편한 부분들을 설정파일을 통해 입맛에 맞게 바꿀 수 있다는 점이 매력적이다.
지금도 유용하게 사용하는 vim 플러그인들에 대한 소개와 설치방법 및 사용법에 대해 간단히 알아보겠다.
 플러그인 매니저 설치 vim에서 Plugin들을 설치, 관리해주는 도구들이 여러개 있는데 (Vundle, Pathogen) 그 중에서 나는 junegunn님이 만드신 vim-plug를 사용중이다.
현재 neovim을 사용중이므로 설치 방법은 아래와 같다.
          
        
        </description>
    </item>
    
    <item>
      <title>Vim 사용하기 #1 - Install</title>
      <link>https://ralpioxxcs.github.io/post/vim/vim_setting_1/</link>
      <pubDate>Fri, 19 Jun 2020 21:06:39 +0900</pubDate>
      
      <guid>https://ralpioxxcs.github.io/post/vim/vim_setting_1/</guid>
      <description>
        
          
          
          
        
        
        
          나에게 vim이란 라즈베리파이 같은 리소스나 메모리등 작업 환경이 열악하거나 불가피한 사유로 인터넷을 사용하지 못하는 상황에서 가끔 쓰던 편집기였다.
hjkl로 움직이고, visual mode, normal mode 등등 처음에는 진입장벽이 높게 느껴져서 손이 안가다가, 마우스를 쓰는게 너무 귀찮아서 일주일만 마음먹고 연습(?)을 했더니 이제는 vim이 없으면 코딩을 할 맛이 안나게 될 정도로 익숙해져버렸다.
vim으로 갈아타게 된 결정적인 계기는 VSCode에서 지원하는 c/cpp extension이 메모리를 너무 잡아먹어서이다.. (물론 vim도 이것저것 많이 깔면 느려지겠지만)
          
        
        </description>
    </item>
    
  </channel>
</rss>