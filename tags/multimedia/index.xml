<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>multimedia on Devlog</title>
    <link>https://ralpioxxcs.github.io/tags/multimedia/</link>
    <description>Recent content in multimedia on Devlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 02 Nov 2022 23:35:14 +0900</lastBuildDate><atom:link href="https://ralpioxxcs.github.io/tags/multimedia/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GStreamer 사용하기 [2] - 어플리케이션 만들기</title>
      <link>https://ralpioxxcs.github.io/post/gstreamer/1_gst/</link>
      <pubDate>Wed, 02 Nov 2022 23:35:14 +0900</pubDate>
      
      <guid>https://ralpioxxcs.github.io/post/gstreamer/1_gst/</guid>
      <description>gst-launch를 사용하여 커맨드라인으로 원하는 파이프라인을 실행시킬 수도 있지만, GStreamer API 구성 요소를 사용하여 명령줄로 구현했던 파이프라인의 기능을 똑같이 동작시키는 하나의 응용 어플리케이션 형태로도 만들수 있다.
GStreamer는 기본적으로 GLib의 GObject를 기반으로 설계되었기 때문에 GObject의 개념을 어느정도 이해하고 있어야 GStreamer를 다루는데 능숙해지지만, 이는 plugin을 만들거나 단순 기능을 사용하는것이 아닌 스케줄링, 동기화등의 비교적 고급 기능을 사용하려고나 할때 중요한 것이다. 공식 문서에 올라와있는 예제 코드를 살펴보자.
아래 코드는 GStreamer 플러그인중 state of the art로 여겨지는 playbin을 실행시키는 예제이다.</description>
    </item>
    
    <item>
      <title>GStreamer 사용하기 [1] - 파이프라인 구성요소 및 개념</title>
      <link>https://ralpioxxcs.github.io/post/gstreamer/0_gst/</link>
      <pubDate>Wed, 02 Nov 2022 22:15:21 +0900</pubDate>
      
      <guid>https://ralpioxxcs.github.io/post/gstreamer/0_gst/</guid>
      <description>최근에 멀티미디어 관련 프로젝트를 진행하면서 GStreamer를 사용할 일이 생겼다. 간단하게 사용하기에는 알아야할 것들이나 개념들이 꽤나 많기 때문에 GStreamer를 사용하면서 정리한 내용들 및 추가적으로 학습한 내용들을 포스팅할 예정이다.
GStreamer gstreamer overview Gstreamer는 스트리밍 미디어 어플리케이션 생성을 위한 통합 미디어 프레임워크로, 수많은 모듈형식으로 구성된 멀티미디어 프레임워크이다. 주로 오디오, 비디오 스트림등 다양한 데이터 프로토콜의 흐름을 설계할 수 있도록 도와준다. 예를들어 어떤 영상 파일을 rtsp클라이언트를(ex. VLC)이용해서 접근할 수 있도록 rtp 데이터 스트림을 생성하는 rtsp서버를 간단하게 구현할 수 있게 해준다.</description>
    </item>
    
  </channel>
</rss>
